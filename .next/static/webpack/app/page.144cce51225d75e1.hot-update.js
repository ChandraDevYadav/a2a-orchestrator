"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/deepseek-chat-agent.ts":
/*!****************************************!*\
  !*** ./src/lib/deepseek-chat-agent.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeepSeekChatAgent: function() { return /* binding */ DeepSeekChatAgent; },\n/* harmony export */   deepSeekChatAgent: function() { return /* binding */ deepSeekChatAgent; }\n/* harmony export */ });\nclass DeepSeekChatAgent {\n    async generateResponse(userMessage) {\n        let chatHistory = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n        try {\n            const response = await fetch(this.baseUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    action: \"generate_response\",\n                    userMessage,\n                    chatHistory\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            const result = await response.json();\n            return result;\n        } catch (error) {\n            console.error(\"DeepSeek API error:\", error);\n            throw new Error(\"Failed to generate response: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n        }\n    }\n    async isQuizRequest(userMessage) {\n        try {\n            const response = await fetch(this.baseUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    action: \"is_quiz_request\",\n                    userMessage\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            const result = await response.json();\n            return result.isQuiz;\n        } catch (error) {\n            console.error(\"DeepSeek classification error:\", error);\n            // Fallback to simple pattern matching\n            const lowerInput = userMessage.toLowerCase();\n            return lowerInput.includes(\"create\") && lowerInput.includes(\"quiz\") || lowerInput.includes(\"generate\") && lowerInput.includes(\"quiz\") || lowerInput.includes(\"make\") && lowerInput.includes(\"quiz\") || lowerInput.includes(\"quiz about\") || lowerInput.includes(\"quiz on\");\n        }\n    }\n    constructor(baseUrl = \"/api/deepseek\"){\n        this.baseUrl = baseUrl;\n    }\n}\n// Create singleton instance\nconst deepSeekChatAgent = new DeepSeekChatAgent();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZGVlcHNlZWstY2hhdC1hZ2VudC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQWNPLE1BQU1BO0lBT1gsTUFBTUMsaUJBQ0pDLFdBQW1CLEVBRVk7WUFEL0JDLGNBQUFBLGlFQUFxQyxFQUFFO1FBRXZDLElBQUk7WUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sSUFBSSxDQUFDQyxPQUFPLEVBQUU7Z0JBQ3pDQyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztvQkFDbkJDLFFBQVE7b0JBQ1JWO29CQUNBQztnQkFDRjtZQUNGO1lBRUEsSUFBSSxDQUFDQyxTQUFTUyxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSx1QkFBdUMsT0FBaEJWLFNBQVNXLE1BQU07WUFDeEQ7WUFFQSxNQUFNQyxTQUFTLE1BQU1aLFNBQVNhLElBQUk7WUFDbEMsT0FBT0Q7UUFDVCxFQUFFLE9BQU9FLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVCQUF1QkE7WUFDckMsTUFBTSxJQUFJSixNQUNSLGdDQUVDLE9BRENJLGlCQUFpQkosUUFBUUksTUFBTUUsT0FBTyxHQUFHO1FBRy9DO0lBQ0Y7SUFFQSxNQUFNQyxjQUFjbkIsV0FBbUIsRUFBb0I7UUFDekQsSUFBSTtZQUNGLE1BQU1FLFdBQVcsTUFBTUMsTUFBTSxJQUFJLENBQUNDLE9BQU8sRUFBRTtnQkFDekNDLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO2dCQUNsQjtnQkFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO29CQUNuQkMsUUFBUTtvQkFDUlY7Z0JBQ0Y7WUFDRjtZQUVBLElBQUksQ0FBQ0UsU0FBU1MsRUFBRSxFQUFFO2dCQUNoQixNQUFNLElBQUlDLE1BQU0sdUJBQXVDLE9BQWhCVixTQUFTVyxNQUFNO1lBQ3hEO1lBRUEsTUFBTUMsU0FBUyxNQUFNWixTQUFTYSxJQUFJO1lBQ2xDLE9BQU9ELE9BQU9NLE1BQU07UUFDdEIsRUFBRSxPQUFPSixPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxrQ0FBa0NBO1lBQ2hELHNDQUFzQztZQUN0QyxNQUFNSyxhQUFhckIsWUFBWXNCLFdBQVc7WUFDMUMsT0FDRSxXQUFZQyxRQUFRLENBQUMsYUFBYUYsV0FBV0UsUUFBUSxDQUFDLFdBQ3JERixXQUFXRSxRQUFRLENBQUMsZUFBZUYsV0FBV0UsUUFBUSxDQUFDLFdBQ3ZERixXQUFXRSxRQUFRLENBQUMsV0FBV0YsV0FBV0UsUUFBUSxDQUFDLFdBQ3BERixXQUFXRSxRQUFRLENBQUMsaUJBQ3BCRixXQUFXRSxRQUFRLENBQUM7UUFFeEI7SUFDRjtJQXBFQUMsWUFBWXBCLFVBQWtCLGVBQWUsQ0FBRTtRQUM3QyxJQUFJLENBQUNBLE9BQU8sR0FBR0E7SUFDakI7QUFtRUY7QUFFQSw0QkFBNEI7QUFDckIsTUFBTXFCLG9CQUFvQixJQUFJM0Isb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvZGVlcHNlZWstY2hhdC1hZ2VudC50cz8zMmIzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgRGVlcFNlZWtDaGF0TWVzc2FnZSB7XHJcbiAgcm9sZTogXCJ1c2VyXCIgfCBcImFzc2lzdGFudFwiIHwgXCJzeXN0ZW1cIjtcclxuICBjb250ZW50OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGVlcFNlZWtDaGF0UmVzcG9uc2Uge1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICB1c2FnZT86IHtcclxuICAgIHByb21wdF90b2tlbnM6IG51bWJlcjtcclxuICAgIGNvbXBsZXRpb25fdG9rZW5zOiBudW1iZXI7XHJcbiAgICB0b3RhbF90b2tlbnM6IG51bWJlcjtcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRGVlcFNlZWtDaGF0QWdlbnQge1xyXG4gIHByaXZhdGUgYmFzZVVybDogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihiYXNlVXJsOiBzdHJpbmcgPSBcIi9hcGkvZGVlcHNlZWtcIikge1xyXG4gICAgdGhpcy5iYXNlVXJsID0gYmFzZVVybDtcclxuICB9XHJcblxyXG4gIGFzeW5jIGdlbmVyYXRlUmVzcG9uc2UoXHJcbiAgICB1c2VyTWVzc2FnZTogc3RyaW5nLFxyXG4gICAgY2hhdEhpc3Rvcnk6IERlZXBTZWVrQ2hhdE1lc3NhZ2VbXSA9IFtdXHJcbiAgKTogUHJvbWlzZTxEZWVwU2Vla0NoYXRSZXNwb25zZT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh0aGlzLmJhc2VVcmwsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgYWN0aW9uOiBcImdlbmVyYXRlX3Jlc3BvbnNlXCIsXHJcbiAgICAgICAgICB1c2VyTWVzc2FnZSxcclxuICAgICAgICAgIGNoYXRIaXN0b3J5LFxyXG4gICAgICAgIH0pLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIHN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJEZWVwU2VlayBBUEkgZXJyb3I6XCIsIGVycm9yKTtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgIGBGYWlsZWQgdG8gZ2VuZXJhdGUgcmVzcG9uc2U6ICR7XHJcbiAgICAgICAgICBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFwiVW5rbm93biBlcnJvclwiXHJcbiAgICAgICAgfWBcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIGlzUXVpelJlcXVlc3QodXNlck1lc3NhZ2U6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh0aGlzLmJhc2VVcmwsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgYWN0aW9uOiBcImlzX3F1aXpfcmVxdWVzdFwiLFxyXG4gICAgICAgICAgdXNlck1lc3NhZ2UsXHJcbiAgICAgICAgfSksXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICByZXR1cm4gcmVzdWx0LmlzUXVpejtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJEZWVwU2VlayBjbGFzc2lmaWNhdGlvbiBlcnJvcjpcIiwgZXJyb3IpO1xyXG4gICAgICAvLyBGYWxsYmFjayB0byBzaW1wbGUgcGF0dGVybiBtYXRjaGluZ1xyXG4gICAgICBjb25zdCBsb3dlcklucHV0ID0gdXNlck1lc3NhZ2UudG9Mb3dlckNhc2UoKTtcclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICAobG93ZXJJbnB1dC5pbmNsdWRlcyhcImNyZWF0ZVwiKSAmJiBsb3dlcklucHV0LmluY2x1ZGVzKFwicXVpelwiKSkgfHxcclxuICAgICAgICAobG93ZXJJbnB1dC5pbmNsdWRlcyhcImdlbmVyYXRlXCIpICYmIGxvd2VySW5wdXQuaW5jbHVkZXMoXCJxdWl6XCIpKSB8fFxyXG4gICAgICAgIChsb3dlcklucHV0LmluY2x1ZGVzKFwibWFrZVwiKSAmJiBsb3dlcklucHV0LmluY2x1ZGVzKFwicXVpelwiKSkgfHxcclxuICAgICAgICBsb3dlcklucHV0LmluY2x1ZGVzKFwicXVpeiBhYm91dFwiKSB8fFxyXG4gICAgICAgIGxvd2VySW5wdXQuaW5jbHVkZXMoXCJxdWl6IG9uXCIpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBDcmVhdGUgc2luZ2xldG9uIGluc3RhbmNlXHJcbmV4cG9ydCBjb25zdCBkZWVwU2Vla0NoYXRBZ2VudCA9IG5ldyBEZWVwU2Vla0NoYXRBZ2VudCgpO1xyXG4iXSwibmFtZXMiOlsiRGVlcFNlZWtDaGF0QWdlbnQiLCJnZW5lcmF0ZVJlc3BvbnNlIiwidXNlck1lc3NhZ2UiLCJjaGF0SGlzdG9yeSIsInJlc3BvbnNlIiwiZmV0Y2giLCJiYXNlVXJsIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWN0aW9uIiwib2siLCJFcnJvciIsInN0YXR1cyIsInJlc3VsdCIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJtZXNzYWdlIiwiaXNRdWl6UmVxdWVzdCIsImlzUXVpeiIsImxvd2VySW5wdXQiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiY29uc3RydWN0b3IiLCJkZWVwU2Vla0NoYXRBZ2VudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/deepseek-chat-agent.ts\n"));

/***/ })

});